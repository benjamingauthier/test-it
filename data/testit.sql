-- MySQL Script generated by MySQL Workbench
-- Sat Dec 20 23:47:29 2014
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema test-it
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `test-it` ;

-- -----------------------------------------------------
-- Schema test-it
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `test-it` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `test-it` ;

-- -----------------------------------------------------
-- Table `test-it`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test-it`.`users` (
  `id` INT NOT NULL,
  `login` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `firstname` VARCHAR(45) NULL,
  `lastname` VARCHAR(45) NULL,
  `admin` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `test-it`.`operating_systems`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test-it`.`operating_systems` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `test-it`.`applications`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test-it`.`applications` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(255) NULL,
  `current_version` VARCHAR(45) NULL,
  `operating_systems_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_applications_operating_systems1_idx` (`operating_systems_id` ASC),
  CONSTRAINT `fk_applications_operating_systems1`
    FOREIGN KEY (`operating_systems_id`)
    REFERENCES `test-it`.`operating_systems` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `test-it`.`version`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test-it`.`version` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(255) NULL,
  `applications_id` INT NOT NULL,
  PRIMARY KEY (`id`, `applications_id`),
  INDEX `fk_version_applications1_idx` (`applications_id` ASC),
  CONSTRAINT `fk_version_applications1`
    FOREIGN KEY (`applications_id`)
    REFERENCES `test-it`.`applications` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `test-it`.`check_ups`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test-it`.`check_ups` (
  `id` INT NOT NULL,
  `description` VARCHAR(45) NULL,
  `checked` TINYINT(1) NULL DEFAULT 0,
  `version_id` INT NOT NULL,
  `version_applications_id` INT NOT NULL,
  PRIMARY KEY (`id`, `version_id`, `version_applications_id`),
  INDEX `fk_check_ups_version1_idx` (`version_id` ASC, `version_applications_id` ASC),
  CONSTRAINT `fk_check_ups_version1`
    FOREIGN KEY (`version_id` , `version_applications_id`)
    REFERENCES `test-it`.`version` (`id` , `applications_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `test-it`.`version_has_applications`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test-it`.`version_has_applications` (
  `version_id` INT NOT NULL,
  `applications_id` INT NOT NULL,
  PRIMARY KEY (`version_id`, `applications_id`),
  INDEX `fk_version_has_applications_applications1_idx` (`applications_id` ASC),
  INDEX `fk_version_has_applications_version1_idx` (`version_id` ASC),
  CONSTRAINT `fk_version_has_applications_version1`
    FOREIGN KEY (`version_id`)
    REFERENCES `test-it`.`version` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_version_has_applications_applications1`
    FOREIGN KEY (`applications_id`)
    REFERENCES `test-it`.`applications` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `test-it`.`users_test_operating_systems`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test-it`.`users_test_operating_systems` (
  `users_id` INT NOT NULL,
  `operating_systems_id` INT NOT NULL,
  PRIMARY KEY (`users_id`, `operating_systems_id`),
  INDEX `fk_users_has_operating_systems_operating_systems1_idx` (`operating_systems_id` ASC),
  INDEX `fk_users_has_operating_systems_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_users_has_operating_systems_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `test-it`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_operating_systems_operating_systems1`
    FOREIGN KEY (`operating_systems_id`)
    REFERENCES `test-it`.`operating_systems` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `test-it`.`users_has_check_ups`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test-it`.`users_has_check_ups` (
  `users_id` INT NOT NULL,
  `check_ups_id` INT NOT NULL,
  `check_ups_version_id` INT NOT NULL,
  `check_ups_version_applications_id` INT NOT NULL,
  PRIMARY KEY (`users_id`, `check_ups_id`, `check_ups_version_id`, `check_ups_version_applications_id`),
  INDEX `fk_users_has_check_ups_check_ups1_idx` (`check_ups_id` ASC, `check_ups_version_id` ASC, `check_ups_version_applications_id` ASC),
  INDEX `fk_users_has_check_ups_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_users_has_check_ups_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `test-it`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_check_ups_check_ups1`
    FOREIGN KEY (`check_ups_id` , `check_ups_version_id` , `check_ups_version_applications_id`)
    REFERENCES `test-it`.`check_ups` (`id` , `version_id` , `version_applications_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `test-it`.`users_has_applications`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test-it`.`users_has_applications` (
  `users_id` INT NOT NULL,
  `applications_id` INT NOT NULL,
  PRIMARY KEY (`users_id`, `applications_id`),
  INDEX `fk_users_has_applications_applications1_idx` (`applications_id` ASC),
  INDEX `fk_users_has_applications_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_users_has_applications_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `test-it`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_applications_applications1`
    FOREIGN KEY (`applications_id`)
    REFERENCES `test-it`.`applications` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
